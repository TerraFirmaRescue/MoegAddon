buildscript {
    repositories {
        mavenCentral()
        jcenter()
        //maven {
        //	name = "forge"
        //	url = "https://files.minecraftforge.net/maven"
        //}
        maven {
            name = "gt"
            url = "https://gregtech.overminddl1.com/"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

allprojects {
    tasks.withType(JavaCompile) {
        options.compilerArgs << "-Xlint:deprecation" << "-Xlint:unchecked"
    }
}

apply plugin: 'eclipse'
eclipse {
    classpath {
        downloadJavadoc = true
        downloadSources = true
    }
}

def eclipseRuntimeClasspath = ""
def eclipseRuntimeClasspathTemplate = "<listEntry value=\"&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; standalone=&quot;no&quot;?&gt;&#10;&lt;runtimeClasspathEntry externalArchive=&quot;@@PATH@@&quot; path=&quot;3&quot; type=&quot;2&quot;/&gt;&#10;\"/>\n"

task eclipseForgeWorkspace(type: Copy) {
    doFirst {
        sourceSets.main.runtimeClasspath.collect {
            eclipseRuntimeClasspath += eclipseRuntimeClasspathTemplate.replaceAll('@@PATH@@', it.toString())
            ""
        }
    }
    from(".meta/eclipse/.metadata") {
        include '**/*.template'
        rename { it.replace '.template', '' }
        filter { it.replaceAll('@@eclipseRuntimeClasspath@@', eclipseRuntimeClasspath) }
        //rename '(.*).template', '$1'
    }
    from(".meta/eclipse/.metadata") {
        exclude '**/*.launch'
    }
    into "eclipse/.metadata"
}

import org.apache.tools.ant.taskdefs.condition.Os
task eclipseForgeProject {
    doLast {
        if(!(new File("eclipse/Minecraft")).exists()) {
            if(!Os.isFamily(Os.FAMILY_WINDOWS)) {
                ant.symlink(resource: "../", link: "eclipse/Minecraft")
            } else {
                println("WINDOWS: Before loading this workspace with Eclipse, manually run this in an Elevated/Admin command prompt:")
                println("mklink /D " + (new File("").absolutePath) + "/eclipse/Minecraft " + (new File("").absolutePath))
            }
        }
    }
}
eclipseForgeProject.dependsOn(eclipseForgeWorkspace)

tasks.eclipse.dependsOn(eclipseForgeProject)

apply plugin: 'idea'
idea{
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

repositories {
    maven {
        name = "gt"
        url = "https://gregtech.overminddl1.com/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

apply plugin: 'forge'

group= "com.yuesha.moegadd"
archivesBaseName = "MoegAddon_1.7.10"
version = "1.12"

sourceCompatibility = 1.8
targetCompatibility = 1.8
compileJava.options.bootClasspath = org.gradle.internal.jvm.Jvm.current().getJre().getHomeDir().toString() +"/lib/rt.jar"
compileJava {
    options.encoding = "UTF-8"
}

configurations {
    shade
    compile.extendsFrom shade
}

minecraft {
    version = "1.7.10-10.13.4.1614-1.7.10"
    runDir = "idea"
}

dependencies {
    //compile fileTree(dir: 'libs', include: '*.jar')
    runtime 'org.apache.commons:commons-math3:3.2' // Needed for dev opis because it doesn't know how to specify dependencies properly
    runtime 'org.jfree:jcommon:1.0.21'             // Needed for dev opis because it doesn't know how to specify dependencies properly
    runtime 'org.jfree:jfreechart:1.0.17'          // Needed for dev opis because it doesn't know how to specify dependencies properly
    runtime 'com.miglayout:miglayout-swing:4.2'    // Needed for dev opis because it doesn't know how to specify dependencies properly
    runtime 'net.sf.opencsv:opencsv:2.3'           // Needed for dev opis because it doesn't know how to specify dependencies properly
    runtime "io.netty-opis:Netty-opis:4.0.23"      // Needed for dev opis because it doesn't know how to specify dependencies properly
    runtime "mcp.mobius.opis:Opis:1.2.5_1.7.10:dev"
    compile "mcp.mobius.waila:Waila:1.5.11-RC2-NONEI_1.7.10:dev"
    compile "codechicken:CodeChickenLib:1.7.10-1.1.3.140:dev"
    compile "codechicken:CodeChickenCore:1.7.10-1.0.7.47:dev"
    compile "codechicken:NotEnoughItems:1.7.10-1.0.5.120:dev"
    
    compileOnly "net.electricalage.eln:ElectricalAge-jrddunbr:1.16.3:dev"
    compileOnly "net.sengir.forestry:forestry_1.7.10:4.2.16.64:dev"
    compileOnly "com.mod-buildcraft:buildcraft:7.1.23:dev"
    compileOnly "com.azanor.baubles:Baubles:1.7.10-1.0.1.10:deobf"
    compileOnly "micdoodle8.mods:MicdoodleCore:1.7-3.0.12.504:Dev"
    compileOnly "micdoodle8.mods:GalacticraftCore:1.7-3.0.12.504:Dev"
    compileOnly "micdoodle8.mods:Galacticraft-Planets:1.7-3.0.12.504:Dev"
    compileOnly "thaumcraft:Thaumcraft:1.7.10-4.2.3.5:dev"
    compileOnly "enviromine:EnviroMine:1.3.124:deobf"
    compileOnly "vazkii.botania:Botania:r1.8-250:deobf"
    compileOnly "mods.railcraft:Railcraft_1.7.10:9.12.3.0:dev"
    compileOnly "twilightforest:twilightforest:1.7.10-2.3.8dev:dev"
    compileOnly "appeng:appliedenergistics2:rv3-beta-6:dev"
    compileOnly "cofh:CoFHLib:1.7.10R3.0.3:dev"
    compileOnly "applecore:AppleCore:1.7.10-3.1.1:deobf"
    compileOnly "li.cil.oc:OpenComputers:MC1.7.10-1.7.2.1204:dev"
    compileOnly "dan200.computercraft:ComputerCraft:1.75"
    compileOnly "openblocks:OpenBlocks:1.7.10-1.6-1.7.10:deobf"
    compileOnly "openmods:OpenModsLib:1.7.10-0.10:deobf"
    compileOnly "ic2:IC2Classic:1.2.1.8:dev"
    compileOnly "com.builtbroken:AddictedToRed:1.7.10-0.4.0b145:deobf"
    compileOnly "com.builtbroken:Assembly-Line:1.7.10-0.5.7b180:deobf-dev"
    compileOnly "com.builtbroken:BasicIndustry:1.7.10-0.1.0b162:deobf"
    compileOnly "com.builtbroken:ComeCloser:1.7.10-0.7.0b10:deobf"
    compileOnly "com.builtbroken:ICBM-classic:1.7.10-2.16.4b239:deobf"
    compileOnly "com.builtbroken:Mffs:1.7.10-4.0.0b160:deobf"
    compileOnly "com.builtbroken:MilitaryBaseDecor:1.7.10-0.1.0b203:deobf"
    compile "com.gregoriust.gregtech:gregtech_1.7.10:6.13.02:dev"

}

runClient {
    jvmArgs "-Xmx4096m", "-Xms1024m"
}

runServer {
    jvmArgs "-Xmx4096m", "-Xms1024m"
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
